<!DOCTYPE html>
    <meta charset="utf-8">
    <style>

    .link {
     stroke: #000;
     stroke-width: 1.5px;
    }

    .node {
     fill: #000;
     stroke: #fff;
     stroke-width: 1.5px;
    }

    .node.a { fill: #ff7f0e;}
    .node.b { fill: #2ca02c;}
    .node.c { fill: #2ca02c;}
    .node.d { fill: #2ca02c;}


    </style>
    <body>
    <script src="http://d3js.org/d3.v3.min.js"></script>
    <script>

    var width = 960,
        height = 500,
		circle_width = 80;

    var color = d3.scale.category10();

    var nodes = [],
        links = [];

    var force = d3.layout.force()
    .nodes(nodes)
    .links(links)
    .charge(-400)
    .size([width, height])
    .on("tick", tick);

force.linkDistance(function(link){
	return link.dis;
});

    var svg = d3.select("body").append("svg")
    .attr("width", width)
    .attr("height", height);

	var defs = svg.append('svg:defs');
	
	defs.append("svg:pattern")
		.attr("id", "imagea")
		.attr("width", circle_width)
		.attr("height", circle_width)
		.attr("patternUnits", "userSpaceOnUse")
		.append("svg:image")
		.attr("xlink:href", "./wemy.jpg")
		.attr("width", circle_width)
		.attr("height", circle_width)
		.attr("x",0)
		.attr("y",0);

	defs.append("svg:pattern")
		.attr("id", "imageb")
		.attr("width", circle_width)
		.attr("height", circle_width)
		.attr("patternUnits", "userSpaceOnUse")
		.append("svg:image")
		.attr("xlink:href", "./jingfei.jpg")
		.attr("width", circle_width)
		.attr("height", circle_width)
		.attr("x",0)
		.attr("y",0);

    var node = svg.selectAll(".node"),
    link = svg.selectAll(".link");


    setTimeout(function() {
     var a = {id: "a"}, b = {id: "b"}, c = {id: "c"},d = {id: "d"};

    nodes.push(a, b, c, d);
    links.push(
		{source: a, target: b, dis:120}, 
		{source: a, target: c, dis:180},
		{source: a, target: d, dis:150});
    start();
    }, 0);



    function start() {
     link = link.data(force.links(), function(d) { return d.source.id + "-" + d.target.id; });
     link.enter().insert("line", ".node").attr("class", "link");
     link.exit().remove();

     node = node.data(force.nodes(), function(d) { return d.id;});
     node.enter().append("circle")
						.attr("class", function(d) { 
							return "node " + d.id; 
						})
						.attr("cx", circle_width/2)
						.attr("cy", circle_width/2)
						.attr("r", circle_width/2)
						.style("fill", "#fff")
						.style("fill", function(d) {
							return "url(#image" + d.id + ")";
						})
						.style("stroke", "black")
						.style("stroke-width", 0.25);
     node.exit().remove();

     force.start();
    }

    function tick() {
      node.attr("cx", function(d) { return d.x; })
          .attr("cy", function(d) { return d.y; })

      link.attr("x1", function(d) { return d.source.x; })
      .attr("y1", function(d) { return d.source.y; })
      .attr("x2", function(d) { return d.target.x; })
      .attr("y2", function(d) { return d.target.y; });
      }

    </script>
